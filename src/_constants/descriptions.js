const descriptions = {
  "Abstract Factory": {
    title: "Абстрактная фабрика",
    text: "Интерфейс или абстрактный, общий класс для создания семейств взаимосвязанных или взаимозависимых объектов, без указания их конкретных классов."
  },
  "Builder": {
    title: "Строитель",
    text: "",
  },
  "Factory Method": {
    title: "Фабричный метод",
    text: "Класс, который делегирует логику создания нужных экземпляров дочерним классам. Паттерн полезен, если логика работы подклассов одинаковая, но конкретный подкласс выясняется только во время выполнения программы.",
  },
  "Prototype": {
    title: "Прототип",
    text: "",
  },
  "Singleton": {
    title: "Одиночка",
    text: "Класс, который может иметь только один экземпляр и предоставляет глобальную точку доступа к нему.",
  },
  "Adapter": {
    title: "Адаптер",
    text: "",
  },
  "Bridge": {
    title: "Мост",
    text: "",
  },
  "Composite": {
    title: "Компоновщик",
    text: "",
  },
  "Decorator": {
    title: "Декоратор",
    text: "",
  },
  "Facade": {
    title: "Фасад",
    text: "",
  },
  "Flyweight": {
    title: "Приспособленец",
    text: "",
  },
  "Proxy": {
    title: "Прокси",
    text: "",
  },
  "Chain of responsibility": {
    title: "Цепочка обязанностей",
    text: "Рекуррентный конвейер из обработчиков, в котором каждый обработчик может либо обработать поступившее сообщение (например, только сообщения определенного типа), либо делегировать следующему. Возможен вариант обработки и последующей передачи. При этом клиенту, чтобы инициировать обработку сообщения, достаточно лишь передать его первому в конвейере обработчику.",
  },
  "Command": {
    title: "Команда",
    text: "",
  },
  "Interpreter": {
    title: "Интерпретатор",
    text: "",
  },
  "Iterator": {
    title: "Итератор",
    text: "",
  },
  "Mediator": {
    title: "Посредник",
    text: "",
  },
  "Memento": {
    title: "Хранитель",
    text: "Не нарушая инкапсуляцию, определяет и сохраняет внутреннее состояние объекта, позволяет позже восстановить объект в этом состоянии.",
  },
  "Observer": {
    title: "наблюдатель",
    text: "",
  },
  "State": {
    title: "Состояние",
    text: "",
  },
  "Strategy": {
    title: "Стратегия",
    text: "",
  },
  "Template method": {
    title: "Шаблонный метод",
    text: "",
  },
  "Visitor": {
    title: "Посетитель",
    text: "",
  },
};

export default descriptions
